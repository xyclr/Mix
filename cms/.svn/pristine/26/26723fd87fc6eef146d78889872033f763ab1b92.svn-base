<?php

/**
 * The control file of balance module of RanZhi.
 *
 * @copyright   Copyright 2009-2015 青岛易软天创网络科技有限公司(QingDao Nature Easy Soft Network Technology Co,LTD, www.cnezsoft.com)
 * @license     ZPL (http://zpl.pub/page/zplv11.html)
 * @author      Tingting Dai <daitingting@xirangit.com>
 * @package     balance
 * @version     $Id$
 * @link        http://www.ranzhico.com
 */
class data extends control {

    public function index() {
        $this->locate(inlink('browse'));
    }

    /**
     * Browse balance.
     * 
     * @param string $dataBy     the data by
     * @param int    $recTotal 
     * @param int    $recPerPage 
     * @param int    $pageID 
     * @access public
     * @return void
     */
    public function browse($mode ='all', $dataBy = 'id_desc', $recTotal = 0, $recPerPage = 10, $pageID = 1) {
        $this->app->loadClass('pager', $static              = true);
        $pager               = new pager($recTotal, $recPerPage, $pageID);
        $datas              = $this->data->getList('', $dataBy, $pager);
        $this->view->title   = $this->lang->data->browse;
        $this->view->pager   = $pager;
        $this->view->mode    = $mode;
        $this->view->dataBy = $dataBy;
        $this->view->datas  = $datas;
        $this->display();
    }
    
    //取消订单
     public function cancel($data_id) {
        if($_GET)
        {
            $return = $this->data->update($data_id);
            $this->send(array('result' => 'success', 'message' => "成功"));
        }
        $this->send(array('result' => 'fail', 'message' => dao::getError()));
    }

    /**
     * Browse balance.
     * 
     * @param string $dataBy     the data by
     * @param int    $recTotal 
     * @param int    $recPerPage 
     * @param int    $pageID 
     * @access public
     * @return void
     */
    public function feedbackList($depositor = 0, $dataBy = 'id_desc', $recTotal = 0, $recPerPage = 10, $pageID = 1) {
        $this->app->loadClass('pager', $static              = true);
        $pager               = new pager($recTotal, $recPerPage, $pageID);
        $datas              = $this->data->getFeedbackList('', $dataBy, $pager);
        $this->view->title   = $this->lang->data->feedbackList;
        $this->view->pager   = $pager;
        $this->view->dataBy = $dataBy;
        $this->view->datas  = $datas;
        $this->display();
    }

    /**
     * Create a contact.
     * 
     * @param  int    $depositor 
     * @access public
     * @return void
     */
    public function create($depositor = 0) {
        if ($_POST) {
            //获取会员卡信息
            $member_info = $this->loadModel('card', 'finance')->getNumberInfo($_POST['member']);
            if (empty($member_info)) {
                $this->send(array('result' => 'fail', 'message' => "无法获取会员信息"));
            }
            if (floatval($member_info->amount) < floatval($this->post->good_amount)) {
                $this->send(array('result' => 'fail', 'message' => "会员卡余额不足，请充值"));
            }
            $dataID = $this->data->create();
            $result  = false;
            if ($dataID) {
                $result = $this->loadModel('card', 'finance')->updatePay($_POST['member'], floatval($this->post->good_amount), 2);
            }
            //扣除卡内金额
            if (!$result)
                $this->send(array('result' => 'fail', 'message' => dao::getError()));

            if ($result) {
                $this->data->updateOrderStatus($dataID);
                $this->send(array('result' => 'success', 'message' => "支付成功，等待送往车间", 'locate' => inlink('browse')));
            }
        }
        //获取类型
//        $this->view->title            = $this->lang->balance->create;
//        $this->view->currentDepositor = $depositor;
        $this->view->clothModelList = $this->loadModel('cloth', 'sys')->getList(1);
        $this->view->brandList      = $this->loadModel('cloth', 'sys')->getList(2);
        //生成洗涤码
        $this->view->data_sn       = $this->makePaySn(1);
//        $this->view->currencyList     = $this->loadModel('common', 'sys')->getCurrencyList();
        $this->display();
    }

    /**
     * Create a contact.
     * 
     * @param  int    $depositor 
     * @access public
     * @return void
     */
    public function feedback($id = 0) {
        if ($_POST) {
            //获取会员卡信息
            $feedback_id = $this->data->feedback();
            if (dao::isError())
                $this->send(array('result' => 'fail', 'message' => dao::getError()));
            if ($feedback_id)
                $this->send(array('result' => 'success', 'message' => "添加成功", 'locate' => $this->server->http_referer));
        }
        if (!$id) {
            $this->locate(inlink('browse'));
        }
        //获取类型
//        $this->view->title            = $this->lang->balance->create;
//        $this->view->currentDepositor = $depositor;
        $this->view->clothModelList = $this->loadModel('cloth', 'sys')->getList(1);
        $this->view->brandList      = $this->loadModel('cloth', 'sys')->getList(2);
        $this->view->data_info     = $this->data->getByID($id);
        //生成洗涤码
        $this->view->data_sn       = $this->makePaySn(1);
//        $this->view->currencyList     = $this->loadModel('common', 'sys')->getCurrencyList();
        $this->display();
    }

    public function dataList() {
        $this->display();
    }

    public function makePaySn($member_id) {
        return mt_rand(10, 99)
                . sprintf('%010d', time() - 946656000)
                . sprintf('%03d', (float) microtime() * 1000)
                . sprintf('%03d', (int) $member_id % 1000);
    }

    /**
     * Edit a balance.
     * 
     * @param  int    $balanceID 
     * @access public
     * @return void
     */
    public function edit($balanceID) {
        $balance = $this->balance->getByID($balanceID);
        if (empty($balance))
            die();
        if ($_POST) {
            $changes = $this->balance->update($balanceID);
            if (dao::isError())
                $this->send(array('result' => 'fail', 'message' => dao::getError()));

            if ($changes) {
                $actionID = $this->loadModel('action')->create('balance', $balanceID, 'Edited', '');
                $this->action->logHistory($actionID, $changes);
            }

            $this->send(array('result' => 'success', 'message' => $this->lang->saveSuccess, 'locate' => inlink('browse')));
        }

        $this->view->title         = $this->lang->balance->edit;
        $this->view->balance       = $balance;
        $this->view->depositorList = $this->loadModel('depositor')->getList();
        $this->view->currencyList  = $this->loadModel('common', 'sys')->getCurrencyList();

        $this->display();
    }

    /**
     * Delete a balance.
     * 
     * @param  int      $balanceID 
     * @access public
     * @return void
     */
    public function delete($balanceID) {
        if ($this->balance->delete($balanceID))
            $this->send(array('result' => 'success'));
        $this->send(array('result' => 'fail', 'message' => dao::getError()));
    }

}
