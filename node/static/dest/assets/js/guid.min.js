define(function(require, exports, module) {
    var guid = {
        Init: function () {
            that = this;
            $(".guid-box").length !== 0 && this.InitTip($(".guid-box"), $(".guid-mask"));
            if(that.GetCookie("tStatus") != 1) {
                $(".guid-box .item").removeClass("item-show").eq(0).addClass("item-show");
                guid.ShowTip($(".guid-box"), $(".guid-mask"));
                that.SetCookie("tStatus",1);
            }
            that.CheckScroll();
            that.DomEvent();
        },

        CheckScroll : function(){
            if($(window).scrollTop() !== 0) {
                $('html, body').animate({scrollTop : 0},10);
            }
        },

        DomEvent: function () {
            //首页引导事件绑定
            var that = this;

            $(".sdier-bar-guid").click(function () {
                if($(window).scrollTop() !== 0) {
                    $('html, body').animate({scrollTop : 0},400);
                }
                var $circleDom = $('<div style="position:fixed;right:30px;bottom:170px;width:10px;height: 10px;border-radius: 99999999px;background-color:#000; opacity:0.60; filter:alpha(opacity=50);z-index: 10000;"></div>').appendTo('body');
                $circleDom.addClass("pointRadius");
                setTimeout(function(){
                    $circleDom.remove();
                    $(".guid-box .item").removeClass("item-show").eq(0).addClass("item-show");
                    guid.ShowTip($(".guid-box"), $(".guid-mask"));
                    that.SetCookie("tStatus",1);
                },400)

                return false
            });
            //下个提示事件
            $(".btn-next").click(function(){
                var next = $(this).parents(".item").removeClass("item-show").next().addClass("item-show");
                var nextPos = next.attr("pos");
                if(nextPos && $(nextPos).length) {
                    $('html, body').animate({scrollTop : $(nextPos).offset().top},10);
                }
                return false;
            });
            $(".btn-ok").click(function(){
                guid.HideTip($(".guid-box"), $(".guid-mask"));
            })
        },

        InitTip: function ($obj, $bgObj) {
            var windowW = $(window).width(),
                windowH = $(window).height();
            if ($.browser.msie && $.browser.version == '6.0' && !$.support.style) {
                var scrollT = $(window).scrollTop(),
                    scrollL = $(window).scrollLeft();
                $bgObj.css({"width": windowW + scrollL, "height": windowH + scrollT});
            } else {
                $bgObj.css({"width": windowW, "height": windowH});
            }
        },

        ShowTip: function ($obj, $bgObj) {
            $obj.show();
            $bgObj.show();
        },

        HideTip: function ($obj,$bgObj) {
            $bgObj.hide();
            $obj.hide();
            this.SetCookie("tipVisible","no");
        },
        GetCookie :function (name){
            var arr = document.cookie.match(new RegExp("(^| )"+name+"=([^;]*)(;|$)"));
            if(arr != null) return decodeURIComponent(arr[2]); return null;
        },

        SetCookie : function (name,value,options){
            var expires = '', path = '', domain = '', secure = '';
            if(options)
            {
                if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
                    var exp;
                    if (typeof options.expires == 'number') {
                        exp = new Date();
                        exp.setTime(exp.getTime() + options.expires*24*60*60*1000);
                    }
                    else{
                        exp = options.expires;
                    }
                    expires = ';expires=' + exp.toUTCString();
                }
                path = options.path ? '; path=' + options.path : '';
                domain = options.domain ? ';domain=' + options.domain : '';
                secure = options.secure ? ';secure' : '';
            }
            document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
        }
    };
    module.exports = guid;
})
